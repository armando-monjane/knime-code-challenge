spring:
  application:
    name: feature-flag-service
  
  profiles:
    active: local
  
  datasource:
    url: jdbc:postgresql://localhost:5432/feature_flags
    username: feature_flags_user
    password: feature_flags_password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  rabbitmq:
    host: localhost
    port: 5672
    username: feature_flags_user
    password: feature_flags_password
    connection-timeout: 2000ms
    listener:
      simple:
        concurrency: 3
        max-concurrency: 10
        prefetch: 1
        default-requeue-rejected: false

  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

  logging:
    level:
      com.featureflags: DEBUG
      org.springframework.amqp: DEBUG
      org.hibernate.SQL: DEBUG
      org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

server:
  port: 8080
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

---
spring:
  config:
    activate:
      on-profile: docker
  
  datasource:
    url: jdbc:postgresql://postgres:5432/feature_flags
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:feature_flags_user}
    password: ${SPRING_RABBITMQ_PASSWORD:feature_flags_password}

---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://postgres:5432/feature_flags
    username: ${SPRING_DATASOURCE_USERNAME:feature_flags_user}
    password: ${SPRING_DATASOURCE_PASSWORD:feature_flags_password}
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:rabbitmq}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:feature_flags_user}
    password: ${SPRING_RABBITMQ_PASSWORD:feature_flags_password}

  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
    livereload:
      enabled: true

logging:
  level:
    com.featureflags: DEBUG
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  
  rabbitmq:
    host: localhost
    port: 5672
    username: feature_flags_user
    password: feature_flags_password
